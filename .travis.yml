sudo: false

os:
 - linux
 - osx
env: 
 global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
  - secure: "d8/9ELIMrdr9hB2ZB5U33hWlFGUMTjK1Ncj7nOLb1hsHS6/U7XyAh5RNl3v90K0iOCvFXokIc1EFmiTZiw/dP15S+MONRs9MgzwHkMlXfdkHtaPswNRYfXavWuhaGXNSSNAlwKxRCobymyVX5goKxsADaAouSY/vQwKVdIVYd1s="
  - secure: "Gv879EwhQyTnFmClRfD+YrEF5GuH6gl/EORkUaW27gjcKvjGhW4K6yHNjJ4kiuYybvVVaJ5AY1K8WUnH6AhfECfKJBl5Eb7EZA47o4Z8UkmiyEs296OWyPHIwIWrLWQsXIQ2nb1fwKnd0nzpiyy5DzSxm5pgotv3eU/ipdZUp20="
  - secure: "dlvyRvnk4+6XP/b1atadJhvL7QjdV74/3Q48joUmT6EPlBhG7YSKZsbQir+vZInufXJ9dgqm7k4sbLt4pPM4BpspnP7QERzvL5e5qQjJ/9g+aDedtNDOhJXqH9iU+Rf9GHoScsP5XfUgSYSn+GtJomC9FI9BSBLOkJVSnc3ljZc="
 matrix:
  - COVERAGE=1
  - COVERAGE=0
matrix:
 exclude:
# Don't build using gcc on mac
#  - os: osx
#    compiler: gcc
# Don't try to do Coverity or coverage builds on mac
  - os: osx
    env: COVERITY=1
    env: COVERAGE=1
# Don't do cov or coverage on clang
  - os: linux
    compiler: clang
    env: COVERITY=1
    env: COVERAGE=1
# Don't build with clang on Linux
#  - os: linux
#    compiler: clang
compiler: 
- gcc
- clang
language: cpp

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - cmake
    - gcc-4.9
    - g++-4.9
    - valgrind
    - lcov
  coverity_scan:
    project:
      name: "paulsapps/alive"
      description: "Build submitted via Travis CI"
    notification_email: github@paulsapps.com
    build_command_prepend: "mkdir build; cd build; cmake .."
    build_command:   "make -j 2"
    branch_pattern: coverity_scan

cache:
  directories:
    - $HOME/SDL2

install:
- if [[ ! -d "$HOME/SDL2" && "$TRAVIS_OS_NAME" == "linux" ]]; then wget http://www.libsdl.org/release/SDL2-2.0.1.tar.gz && tar -xzvf SDL2-2.0.1.tar.gz && cd SDL2-2.0.1 && ./configure --prefix=$HOME/SDL2 && make && make install && cd ..; fi

- if [ "$TRAVIS_OS_NAME" == "linux" ]; then export SDL2DIR=$HOME/SDL2; fi
- if [ "$CXX" = "g++" ]; then export CXX="g++-4.9" CC="gcc-4.9" export GCOV="gcov-4.9" export LCOV="lcov-1.9-2" export GPP="yes"; fi
- alias g++="g++-4.9"
- alias gcc="gcc-4.9"
- alias lcov="lcov-1.9-2"
- alias gcov="gcov-4.9"
- if [[ "$TRAVIS_OS_NAME" == "linux" && "$GPP" == "yes" && "${COVERITY_SCAN_BRANCH}" != 1 && "${COVERAGE}" == 1 ]]; then gem install coveralls-lcov; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" && "$GPP" == "yes" && "${COVERITY_SCAN_BRANCH}" != 1 && "${COVERAGE}" == 1 ]]; then pip install --user cpp-coveralls; fi

- if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install sdl2; fi

script: 
- $CXX --version
- echo ${COVERITY_SCAN_BRANCH}
- echo $COVERITY_SCAN_BRANCH
- echo $TRAVIS_OS_NAME
- echo ${COVERAGE}

- if [[ "${COVERITY_SCAN_BRANCH}" != 1 ]]; then mkdir build; fi
- if [[ "${COVERITY_SCAN_BRANCH}" != 1 ]]; then cd build; fi

- UseValgrind=OFF
- if [[ "$TRAVIS_OS_NAME" == "linux" && "$GPP" == "yes" && "${COVERITY_SCAN_BRANCH}" != 1  && "${COVERAGE}" == 0 ]]; then UseValgrind=ON; fi
- if [[ "${COVERITY_SCAN_BRANCH}" != 1 ]]; then cmake -G"Unix Makefiles" .. -DUseValgrind=$UseValgrind; fi
- if [[ "${COVERITY_SCAN_BRANCH}" != 1 ]]; then make -j2; fi
- if [[ "${COVERITY_SCAN_BRANCH}" != 1 ]]; then cpack -C Release; fi
- if [[ "${COVERITY_SCAN_BRANCH}" != 1 ]]; then ctest -VV; fi

after_success:
- if [[ "$TRAVIS_OS_NAME" == "linux" && "$GPP" == "yes" && "${COVERITY_SCAN_BRANCH}" != 1 && "${COVERAGE}" == 1 ]]; then $HOME/.local/bin/coveralls --gcov gcov-4.9 --exclude '*/3rdParty/*' --exclude '/usr/*' --gcov-options '\-lp'; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then fileToUpload=`ls *.dmg`; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then fileToUpload=`ls *.deb`; fi
- hash=`git rev-parse HEAD`
- branch_name='git branch'
- if [[ "$GPP" == "yes" && "${COVERITY_SCAN_BRANCH}" == 0 && "${COVERAGE}" == 0 ]]; then curl --ftp-create-dirs -T $fileToUpload -u $FTP_USER:$FTP_PASSWORD ftp://mlgthatsme.com/$branch/$hash/; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then fileToUpload=`ls *.tar.gz`; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" && "$GPP" == "yes" && "${COVERITY_SCAN_BRANCH}" == 0 && "${COVERAGE}" == 0 ]]; then curl --ftp-create-dirs -T $fileToUpload -u $FTP_USER:$FTP_PASSWORD ftp://mlgthatsme.com/$branch/$hash/$fileToUpload; fi

language: cpp

notifications:
  irc:
    - "irc.esper.net#oddworld"
